// Code generated by protoc-gen-go. DO NOT EDIT.
// source: irrpc.proto

package tapir

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Op                   []byte   `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Request) GetOp() []byte {
	if m != nil {
		return m.Op
	}
	return nil
}

type UnLogReqMsg struct {
	Op                   []byte   `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnLogReqMsg) Reset()         { *m = UnLogReqMsg{} }
func (m *UnLogReqMsg) String() string { return proto.CompactTextString(m) }
func (*UnLogReqMsg) ProtoMessage()    {}
func (*UnLogReqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{1}
}

func (m *UnLogReqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnLogReqMsg.Unmarshal(m, b)
}
func (m *UnLogReqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnLogReqMsg.Marshal(b, m, deterministic)
}
func (m *UnLogReqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnLogReqMsg.Merge(m, src)
}
func (m *UnLogReqMsg) XXX_Size() int {
	return xxx_messageInfo_UnLogReqMsg.Size(m)
}
func (m *UnLogReqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_UnLogReqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_UnLogReqMsg proto.InternalMessageInfo

func (m *UnLogReqMsg) GetOp() []byte {
	if m != nil {
		return m.Op
	}
	return nil
}

type UnLogReplyMsg struct {
	Ret                  []byte   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnLogReplyMsg) Reset()         { *m = UnLogReplyMsg{} }
func (m *UnLogReplyMsg) String() string { return proto.CompactTextString(m) }
func (*UnLogReplyMsg) ProtoMessage()    {}
func (*UnLogReplyMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{2}
}

func (m *UnLogReplyMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnLogReplyMsg.Unmarshal(m, b)
}
func (m *UnLogReplyMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnLogReplyMsg.Marshal(b, m, deterministic)
}
func (m *UnLogReplyMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnLogReplyMsg.Merge(m, src)
}
func (m *UnLogReplyMsg) XXX_Size() int {
	return xxx_messageInfo_UnLogReplyMsg.Size(m)
}
func (m *UnLogReplyMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_UnLogReplyMsg.DiscardUnknown(m)
}

var xxx_messageInfo_UnLogReplyMsg proto.InternalMessageInfo

func (m *UnLogReplyMsg) GetRet() []byte {
	if m != nil {
		return m.Ret
	}
	return nil
}

type IncReqMsg struct {
	Req                  *Request `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncReqMsg) Reset()         { *m = IncReqMsg{} }
func (m *IncReqMsg) String() string { return proto.CompactTextString(m) }
func (*IncReqMsg) ProtoMessage()    {}
func (*IncReqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{3}
}

func (m *IncReqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncReqMsg.Unmarshal(m, b)
}
func (m *IncReqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncReqMsg.Marshal(b, m, deterministic)
}
func (m *IncReqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncReqMsg.Merge(m, src)
}
func (m *IncReqMsg) XXX_Size() int {
	return xxx_messageInfo_IncReqMsg.Size(m)
}
func (m *IncReqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_IncReqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_IncReqMsg proto.InternalMessageInfo

func (m *IncReqMsg) GetReq() *Request {
	if m != nil {
		return m.Req
	}
	return nil
}

type FinalIncReqMsg struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinalIncReqMsg) Reset()         { *m = FinalIncReqMsg{} }
func (m *FinalIncReqMsg) String() string { return proto.CompactTextString(m) }
func (*FinalIncReqMsg) ProtoMessage()    {}
func (*FinalIncReqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{4}
}

func (m *FinalIncReqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinalIncReqMsg.Unmarshal(m, b)
}
func (m *FinalIncReqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinalIncReqMsg.Marshal(b, m, deterministic)
}
func (m *FinalIncReqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalIncReqMsg.Merge(m, src)
}
func (m *FinalIncReqMsg) XXX_Size() int {
	return xxx_messageInfo_FinalIncReqMsg.Size(m)
}
func (m *FinalIncReqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalIncReqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_FinalIncReqMsg proto.InternalMessageInfo

func (m *FinalIncReqMsg) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ConfirmMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmMsg) Reset()         { *m = ConfirmMsg{} }
func (m *ConfirmMsg) String() string { return proto.CompactTextString(m) }
func (*ConfirmMsg) ProtoMessage()    {}
func (*ConfirmMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{5}
}

func (m *ConfirmMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmMsg.Unmarshal(m, b)
}
func (m *ConfirmMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmMsg.Marshal(b, m, deterministic)
}
func (m *ConfirmMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmMsg.Merge(m, src)
}
func (m *ConfirmMsg) XXX_Size() int {
	return xxx_messageInfo_ConfirmMsg.Size(m)
}
func (m *ConfirmMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmMsg proto.InternalMessageInfo

type ConReqMsg struct {
	Req                  *Request `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConReqMsg) Reset()         { *m = ConReqMsg{} }
func (m *ConReqMsg) String() string { return proto.CompactTextString(m) }
func (*ConReqMsg) ProtoMessage()    {}
func (*ConReqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{6}
}

func (m *ConReqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConReqMsg.Unmarshal(m, b)
}
func (m *ConReqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConReqMsg.Marshal(b, m, deterministic)
}
func (m *ConReqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConReqMsg.Merge(m, src)
}
func (m *ConReqMsg) XXX_Size() int {
	return xxx_messageInfo_ConReqMsg.Size(m)
}
func (m *ConReqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ConReqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ConReqMsg proto.InternalMessageInfo

func (m *ConReqMsg) GetReq() *Request {
	if m != nil {
		return m.Req
	}
	return nil
}

type ConReplyMsg struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConReplyMsg) Reset()         { *m = ConReplyMsg{} }
func (m *ConReplyMsg) String() string { return proto.CompactTextString(m) }
func (*ConReplyMsg) ProtoMessage()    {}
func (*ConReplyMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{7}
}

func (m *ConReplyMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConReplyMsg.Unmarshal(m, b)
}
func (m *ConReplyMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConReplyMsg.Marshal(b, m, deterministic)
}
func (m *ConReplyMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConReplyMsg.Merge(m, src)
}
func (m *ConReplyMsg) XXX_Size() int {
	return xxx_messageInfo_ConReplyMsg.Size(m)
}
func (m *ConReplyMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ConReplyMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ConReplyMsg proto.InternalMessageInfo

func (m *ConReplyMsg) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type FinalConReqMsg struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ret                  string   `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinalConReqMsg) Reset()         { *m = FinalConReqMsg{} }
func (m *FinalConReqMsg) String() string { return proto.CompactTextString(m) }
func (*FinalConReqMsg) ProtoMessage()    {}
func (*FinalConReqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{8}
}

func (m *FinalConReqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinalConReqMsg.Unmarshal(m, b)
}
func (m *FinalConReqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinalConReqMsg.Marshal(b, m, deterministic)
}
func (m *FinalConReqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalConReqMsg.Merge(m, src)
}
func (m *FinalConReqMsg) XXX_Size() int {
	return xxx_messageInfo_FinalConReqMsg.Size(m)
}
func (m *FinalConReqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalConReqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_FinalConReqMsg proto.InternalMessageInfo

func (m *FinalConReqMsg) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FinalConReqMsg) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type ProbeReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeReq) Reset()         { *m = ProbeReq{} }
func (m *ProbeReq) String() string { return proto.CompactTextString(m) }
func (*ProbeReq) ProtoMessage()    {}
func (*ProbeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{9}
}

func (m *ProbeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeReq.Unmarshal(m, b)
}
func (m *ProbeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeReq.Marshal(b, m, deterministic)
}
func (m *ProbeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeReq.Merge(m, src)
}
func (m *ProbeReq) XXX_Size() int {
	return xxx_messageInfo_ProbeReq.Size(m)
}
func (m *ProbeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeReq proto.InternalMessageInfo

type ProbeReply struct {
	T                    int64    `protobuf:"varint,1,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeReply) Reset()         { *m = ProbeReply{} }
func (m *ProbeReply) String() string { return proto.CompactTextString(m) }
func (*ProbeReply) ProtoMessage()    {}
func (*ProbeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{10}
}

func (m *ProbeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeReply.Unmarshal(m, b)
}
func (m *ProbeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeReply.Marshal(b, m, deterministic)
}
func (m *ProbeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeReply.Merge(m, src)
}
func (m *ProbeReply) XXX_Size() int {
	return xxx_messageInfo_ProbeReply.Size(m)
}
func (m *ProbeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeReply proto.InternalMessageInfo

func (m *ProbeReply) GetT() int64 {
	if m != nil {
		return m.T
	}
	return 0
}

type TestMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMsg) Reset()         { *m = TestMsg{} }
func (m *TestMsg) String() string { return proto.CompactTextString(m) }
func (*TestMsg) ProtoMessage()    {}
func (*TestMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb1f9ddd41bae00c, []int{11}
}

func (m *TestMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMsg.Unmarshal(m, b)
}
func (m *TestMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMsg.Marshal(b, m, deterministic)
}
func (m *TestMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMsg.Merge(m, src)
}
func (m *TestMsg) XXX_Size() int {
	return xxx_messageInfo_TestMsg.Size(m)
}
func (m *TestMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMsg.DiscardUnknown(m)
}

var xxx_messageInfo_TestMsg proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Request)(nil), "tapir.Request")
	proto.RegisterType((*UnLogReqMsg)(nil), "tapir.UnLogReqMsg")
	proto.RegisterType((*UnLogReplyMsg)(nil), "tapir.UnLogReplyMsg")
	proto.RegisterType((*IncReqMsg)(nil), "tapir.IncReqMsg")
	proto.RegisterType((*FinalIncReqMsg)(nil), "tapir.FinalIncReqMsg")
	proto.RegisterType((*ConfirmMsg)(nil), "tapir.ConfirmMsg")
	proto.RegisterType((*ConReqMsg)(nil), "tapir.ConReqMsg")
	proto.RegisterType((*ConReplyMsg)(nil), "tapir.ConReplyMsg")
	proto.RegisterType((*FinalConReqMsg)(nil), "tapir.FinalConReqMsg")
	proto.RegisterType((*ProbeReq)(nil), "tapir.ProbeReq")
	proto.RegisterType((*ProbeReply)(nil), "tapir.ProbeReply")
	proto.RegisterType((*TestMsg)(nil), "tapir.TestMsg")
}

func init() { proto.RegisterFile("irrpc.proto", fileDescriptor_cb1f9ddd41bae00c) }

var fileDescriptor_cb1f9ddd41bae00c = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x4e, 0xc2, 0x40,
	0x14, 0x6c, 0x8b, 0x88, 0x7d, 0x2d, 0x15, 0x37, 0x9a, 0x90, 0x26, 0xc6, 0xba, 0x27, 0x3c, 0xc0,
	0x01, 0xa3, 0x17, 0xbd, 0x91, 0x98, 0x90, 0x48, 0x20, 0x0d, 0x7e, 0x00, 0x94, 0xb5, 0x69, 0x82,
	0xbb, 0xdb, 0x6d, 0x3d, 0xe0, 0x0f, 0xf8, 0xdb, 0xa6, 0xdb, 0x67, 0x5b, 0x90, 0x83, 0xb7, 0xdd,
	0x37, 0x33, 0x6f, 0xa6, 0x93, 0x2e, 0x38, 0x89, 0x52, 0x32, 0x1a, 0x49, 0x25, 0x72, 0x41, 0xda,
	0xf9, 0x4a, 0x26, 0x8a, 0xde, 0x41, 0x27, 0x64, 0xe9, 0x27, 0xcb, 0x72, 0xe2, 0x81, 0x95, 0x6c,
	0xfa, 0x66, 0x60, 0x0e, 0xec, 0xd0, 0x4a, 0x36, 0xc5, 0x5d, 0xc8, 0xbe, 0x15, 0x98, 0x03, 0x37,
	0xb4, 0x84, 0xa4, 0xd7, 0xe0, 0xbc, 0xf1, 0x57, 0x11, 0x87, 0x2c, 0x9d, 0x65, 0x31, 0xc2, 0x66,
	0x05, 0xdf, 0x42, 0x17, 0x61, 0xb9, 0xdd, 0x15, 0x84, 0x1e, 0xb4, 0x14, 0xcb, 0x91, 0x51, 0x1c,
	0xe9, 0x10, 0xec, 0x29, 0x8f, 0x50, 0x1f, 0x14, 0x70, 0xaa, 0x61, 0x67, 0xec, 0x8d, 0x74, 0x9c,
	0x11, 0x66, 0x29, 0xe8, 0x29, 0x0d, 0xc0, 0x7b, 0x49, 0xf8, 0x6a, 0x5b, 0x6b, 0x0e, 0x22, 0x52,
	0x17, 0x60, 0x22, 0xf8, 0x7b, 0xa2, 0x3e, 0x66, 0x59, 0x5c, 0xac, 0x9f, 0x08, 0xfe, 0xef, 0xf5,
	0x37, 0xe0, 0x68, 0xfa, 0xdf, 0xb8, 0x76, 0x19, 0x77, 0x8c, 0xfe, 0xf5, 0xd2, 0xc3, 0x8a, 0x50,
	0x63, 0xd5, 0x1a, 0x80, 0xb3, 0x85, 0x12, 0x6b, 0x16, 0xb2, 0x94, 0xfa, 0x00, 0x78, 0x96, 0xdb,
	0x1d, 0x71, 0xc1, 0x2c, 0xb7, 0xb7, 0x42, 0x33, 0xa7, 0x36, 0x74, 0x96, 0x2c, 0xcb, 0x67, 0x59,
	0x3c, 0xfe, 0x6e, 0x41, 0x7b, 0xaa, 0x42, 0x19, 0x91, 0x67, 0xf0, 0x16, 0x4a, 0x48, 0x91, 0x31,
	0xdd, 0xe4, 0x5c, 0x12, 0x82, 0xc1, 0x1b, 0xc5, 0xfb, 0x97, 0xfb, 0xb3, 0x32, 0x3e, 0x35, 0xc8,
	0x03, 0xb8, 0xa8, 0x9e, 0xf2, 0x68, 0x2e, 0x49, 0x0f, 0x79, 0x55, 0x7d, 0xfe, 0x05, 0x4e, 0x1a,
	0x9d, 0x19, 0xe4, 0x09, 0xba, 0xfa, 0x2b, 0x93, 0x2f, 0xd4, 0x5d, 0x21, 0x6b, 0xbf, 0xfb, 0xe3,
	0xe2, 0xc7, 0xca, 0x73, 0x22, 0x78, 0xc3, 0xb3, 0xaa, 0xcc, 0x27, 0xcd, 0x49, 0x95, 0xb5, 0x61,
	0x5a, 0x0a, 0xf7, 0x4c, 0x6b, 0xf5, 0x51, 0xd3, 0x21, 0xb4, 0x75, 0xaf, 0xe4, 0x1c, 0xd1, 0xdf,
	0xc6, 0x2b, 0x7a, 0x5d, 0x3b, 0x35, 0xc8, 0x00, 0x4e, 0x96, 0xfa, 0xff, 0x46, 0x10, 0x7b, 0xf7,
	0x0f, 0xee, 0xd4, 0x58, 0x9f, 0xea, 0xa7, 0x71, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x1f,
	0x9a, 0xfb, 0x29, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IrRpcClient is the client API for IrRpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IrRpcClient interface {
	// Unlogged operations, including TAPIR reads
	ProposeUnLogOp(ctx context.Context, in *UnLogReqMsg, opts ...grpc.CallOption) (*UnLogReplyMsg, error)
	// RPCs for IR inconsistent operations, including TAPIR commit and abort
	ProposeIncOp(ctx context.Context, in *IncReqMsg, opts ...grpc.CallOption) (*ConfirmMsg, error)
	FinalizeIncOp(ctx context.Context, in *FinalIncReqMsg, opts ...grpc.CallOption) (*ConfirmMsg, error)
	// RPCs for IR consensus operations,  including TAPIR prepare
	ProposeConOp(ctx context.Context, in *ConReqMsg, opts ...grpc.CallOption) (*ConReplyMsg, error)
	FinalizeConOp(ctx context.Context, in *FinalConReqMsg, opts ...grpc.CallOption) (*ConfirmMsg, error)
	// Latency probing
	Probe(ctx context.Context, in *ProbeReq, opts ...grpc.CallOption) (*ProbeReply, error)
	// Testing
	Test(ctx context.Context, in *TestMsg, opts ...grpc.CallOption) (*TestMsg, error)
}

type irRpcClient struct {
	cc grpc.ClientConnInterface
}

func NewIrRpcClient(cc grpc.ClientConnInterface) IrRpcClient {
	return &irRpcClient{cc}
}

func (c *irRpcClient) ProposeUnLogOp(ctx context.Context, in *UnLogReqMsg, opts ...grpc.CallOption) (*UnLogReplyMsg, error) {
	out := new(UnLogReplyMsg)
	err := c.cc.Invoke(ctx, "/tapir.IrRpc/ProposeUnLogOp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *irRpcClient) ProposeIncOp(ctx context.Context, in *IncReqMsg, opts ...grpc.CallOption) (*ConfirmMsg, error) {
	out := new(ConfirmMsg)
	err := c.cc.Invoke(ctx, "/tapir.IrRpc/ProposeIncOp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *irRpcClient) FinalizeIncOp(ctx context.Context, in *FinalIncReqMsg, opts ...grpc.CallOption) (*ConfirmMsg, error) {
	out := new(ConfirmMsg)
	err := c.cc.Invoke(ctx, "/tapir.IrRpc/FinalizeIncOp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *irRpcClient) ProposeConOp(ctx context.Context, in *ConReqMsg, opts ...grpc.CallOption) (*ConReplyMsg, error) {
	out := new(ConReplyMsg)
	err := c.cc.Invoke(ctx, "/tapir.IrRpc/ProposeConOp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *irRpcClient) FinalizeConOp(ctx context.Context, in *FinalConReqMsg, opts ...grpc.CallOption) (*ConfirmMsg, error) {
	out := new(ConfirmMsg)
	err := c.cc.Invoke(ctx, "/tapir.IrRpc/FinalizeConOp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *irRpcClient) Probe(ctx context.Context, in *ProbeReq, opts ...grpc.CallOption) (*ProbeReply, error) {
	out := new(ProbeReply)
	err := c.cc.Invoke(ctx, "/tapir.IrRpc/Probe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *irRpcClient) Test(ctx context.Context, in *TestMsg, opts ...grpc.CallOption) (*TestMsg, error) {
	out := new(TestMsg)
	err := c.cc.Invoke(ctx, "/tapir.IrRpc/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IrRpcServer is the server API for IrRpc service.
type IrRpcServer interface {
	// Unlogged operations, including TAPIR reads
	ProposeUnLogOp(context.Context, *UnLogReqMsg) (*UnLogReplyMsg, error)
	// RPCs for IR inconsistent operations, including TAPIR commit and abort
	ProposeIncOp(context.Context, *IncReqMsg) (*ConfirmMsg, error)
	FinalizeIncOp(context.Context, *FinalIncReqMsg) (*ConfirmMsg, error)
	// RPCs for IR consensus operations,  including TAPIR prepare
	ProposeConOp(context.Context, *ConReqMsg) (*ConReplyMsg, error)
	FinalizeConOp(context.Context, *FinalConReqMsg) (*ConfirmMsg, error)
	// Latency probing
	Probe(context.Context, *ProbeReq) (*ProbeReply, error)
	// Testing
	Test(context.Context, *TestMsg) (*TestMsg, error)
}

// UnimplementedIrRpcServer can be embedded to have forward compatible implementations.
type UnimplementedIrRpcServer struct {
}

func (*UnimplementedIrRpcServer) ProposeUnLogOp(ctx context.Context, req *UnLogReqMsg) (*UnLogReplyMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProposeUnLogOp not implemented")
}
func (*UnimplementedIrRpcServer) ProposeIncOp(ctx context.Context, req *IncReqMsg) (*ConfirmMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProposeIncOp not implemented")
}
func (*UnimplementedIrRpcServer) FinalizeIncOp(ctx context.Context, req *FinalIncReqMsg) (*ConfirmMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeIncOp not implemented")
}
func (*UnimplementedIrRpcServer) ProposeConOp(ctx context.Context, req *ConReqMsg) (*ConReplyMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProposeConOp not implemented")
}
func (*UnimplementedIrRpcServer) FinalizeConOp(ctx context.Context, req *FinalConReqMsg) (*ConfirmMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeConOp not implemented")
}
func (*UnimplementedIrRpcServer) Probe(ctx context.Context, req *ProbeReq) (*ProbeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Probe not implemented")
}
func (*UnimplementedIrRpcServer) Test(ctx context.Context, req *TestMsg) (*TestMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}

func RegisterIrRpcServer(s *grpc.Server, srv IrRpcServer) {
	s.RegisterService(&_IrRpc_serviceDesc, srv)
}

func _IrRpc_ProposeUnLogOp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnLogReqMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrRpcServer).ProposeUnLogOp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tapir.IrRpc/ProposeUnLogOp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrRpcServer).ProposeUnLogOp(ctx, req.(*UnLogReqMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _IrRpc_ProposeIncOp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncReqMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrRpcServer).ProposeIncOp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tapir.IrRpc/ProposeIncOp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrRpcServer).ProposeIncOp(ctx, req.(*IncReqMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _IrRpc_FinalizeIncOp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalIncReqMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrRpcServer).FinalizeIncOp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tapir.IrRpc/FinalizeIncOp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrRpcServer).FinalizeIncOp(ctx, req.(*FinalIncReqMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _IrRpc_ProposeConOp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConReqMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrRpcServer).ProposeConOp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tapir.IrRpc/ProposeConOp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrRpcServer).ProposeConOp(ctx, req.(*ConReqMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _IrRpc_FinalizeConOp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalConReqMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrRpcServer).FinalizeConOp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tapir.IrRpc/FinalizeConOp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrRpcServer).FinalizeConOp(ctx, req.(*FinalConReqMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _IrRpc_Probe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrRpcServer).Probe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tapir.IrRpc/Probe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrRpcServer).Probe(ctx, req.(*ProbeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _IrRpc_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrRpcServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tapir.IrRpc/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrRpcServer).Test(ctx, req.(*TestMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _IrRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tapir.IrRpc",
	HandlerType: (*IrRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProposeUnLogOp",
			Handler:    _IrRpc_ProposeUnLogOp_Handler,
		},
		{
			MethodName: "ProposeIncOp",
			Handler:    _IrRpc_ProposeIncOp_Handler,
		},
		{
			MethodName: "FinalizeIncOp",
			Handler:    _IrRpc_FinalizeIncOp_Handler,
		},
		{
			MethodName: "ProposeConOp",
			Handler:    _IrRpc_ProposeConOp_Handler,
		},
		{
			MethodName: "FinalizeConOp",
			Handler:    _IrRpc_FinalizeConOp_Handler,
		},
		{
			MethodName: "Probe",
			Handler:    _IrRpc_Probe_Handler,
		},
		{
			MethodName: "Test",
			Handler:    _IrRpc_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "irrpc.proto",
}
